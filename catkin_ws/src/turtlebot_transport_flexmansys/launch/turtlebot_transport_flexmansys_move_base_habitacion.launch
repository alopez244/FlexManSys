<?xml version="1.0"?>
<launch>
​
  <arg name="no_static_map" default="false"/>
​
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->
​
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
​
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/general_params/planner_habitacion.yaml" command="load"/>
​
    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/default_planner_params_habitacion/costmap_common_habitacion.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/default_planner_params_habitacion/costmap_common_habitacion.yaml" command="load" ns="local_costmap" />
​
    <!-- local costmap, needs size -->
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/default_planner_params_habitacion/costmap_local_habitacion.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>
​
    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/default_planner_params_habitacion/costmap_global_static_habitacion.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>

    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find turtlebot_transport_flexmansys)/config/default_planner_params_habitacion/costmap_global_laser_habitacion.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>

    <!-- AQUI ES DONDE REMAPEAMOS EL COMANDO DE VELOCIDAD AL QUE SE SUSCRIBE EL AMIGO DE MOVE_BASE -->
    <!-- en esencia publica al cmd_vel en el move_base.launch.xml de /opt/ros/kinetic/share -->
    <!-- lo que hacemos es básicamente hacer que se publique lo mismo que en cmd_vel al /mobile_base/commands...-->

    <remap from="cmd_vel" to="/mobile_base/commands/velocity"/>

  </node>
​
</launch>
